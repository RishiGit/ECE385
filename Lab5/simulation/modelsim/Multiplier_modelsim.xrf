vendor_name = ModelSim
source_file = 1, C:/Users/rjaud/Documents/385/lab5/testbench_8.sv
source_file = 1, C:/Users/rjaud/Documents/385/lab5/ninebra.sv
source_file = 1, C:/Users/rjaud/Documents/385/lab5/control.sv
source_file = 1, C:/Users/rjaud/Documents/385/lab5/register.sv
source_file = 1, C:/Users/rjaud/Documents/385/lab5/Synchronizers.sv
source_file = 1, C:/Users/rjaud/Documents/385/lab5/HexDriver.sv
source_file = 1, C:/Users/rjaud/Documents/385/lab5/Processor.sv
source_file = 1, C:/Users/rjaud/Documents/385/lab5/flip_flop.sv
source_file = 1, C:/Users/rjaud/Documents/385/lab5/SDC1.sdc
source_file = 1, C:/Users/rjaud/Documents/385/lab5/db/Multiplier.cbx.xml
design_name = Processor
instance = comp, \extendbit~output , extendbit~output, Processor, 1
instance = comp, \Aval[0]~output , Aval[0]~output, Processor, 1
instance = comp, \Aval[1]~output , Aval[1]~output, Processor, 1
instance = comp, \Aval[2]~output , Aval[2]~output, Processor, 1
instance = comp, \Aval[3]~output , Aval[3]~output, Processor, 1
instance = comp, \Aval[4]~output , Aval[4]~output, Processor, 1
instance = comp, \Aval[5]~output , Aval[5]~output, Processor, 1
instance = comp, \Aval[6]~output , Aval[6]~output, Processor, 1
instance = comp, \Aval[7]~output , Aval[7]~output, Processor, 1
instance = comp, \Bval[0]~output , Bval[0]~output, Processor, 1
instance = comp, \Bval[1]~output , Bval[1]~output, Processor, 1
instance = comp, \Bval[2]~output , Bval[2]~output, Processor, 1
instance = comp, \Bval[3]~output , Bval[3]~output, Processor, 1
instance = comp, \Bval[4]~output , Bval[4]~output, Processor, 1
instance = comp, \Bval[5]~output , Bval[5]~output, Processor, 1
instance = comp, \Bval[6]~output , Bval[6]~output, Processor, 1
instance = comp, \Bval[7]~output , Bval[7]~output, Processor, 1
instance = comp, \AhexL[0]~output , AhexL[0]~output, Processor, 1
instance = comp, \AhexL[1]~output , AhexL[1]~output, Processor, 1
instance = comp, \AhexL[2]~output , AhexL[2]~output, Processor, 1
instance = comp, \AhexL[3]~output , AhexL[3]~output, Processor, 1
instance = comp, \AhexL[4]~output , AhexL[4]~output, Processor, 1
instance = comp, \AhexL[5]~output , AhexL[5]~output, Processor, 1
instance = comp, \AhexL[6]~output , AhexL[6]~output, Processor, 1
instance = comp, \AhexU[0]~output , AhexU[0]~output, Processor, 1
instance = comp, \AhexU[1]~output , AhexU[1]~output, Processor, 1
instance = comp, \AhexU[2]~output , AhexU[2]~output, Processor, 1
instance = comp, \AhexU[3]~output , AhexU[3]~output, Processor, 1
instance = comp, \AhexU[4]~output , AhexU[4]~output, Processor, 1
instance = comp, \AhexU[5]~output , AhexU[5]~output, Processor, 1
instance = comp, \AhexU[6]~output , AhexU[6]~output, Processor, 1
instance = comp, \BhexL[0]~output , BhexL[0]~output, Processor, 1
instance = comp, \BhexL[1]~output , BhexL[1]~output, Processor, 1
instance = comp, \BhexL[2]~output , BhexL[2]~output, Processor, 1
instance = comp, \BhexL[3]~output , BhexL[3]~output, Processor, 1
instance = comp, \BhexL[4]~output , BhexL[4]~output, Processor, 1
instance = comp, \BhexL[5]~output , BhexL[5]~output, Processor, 1
instance = comp, \BhexL[6]~output , BhexL[6]~output, Processor, 1
instance = comp, \BhexU[0]~output , BhexU[0]~output, Processor, 1
instance = comp, \BhexU[1]~output , BhexU[1]~output, Processor, 1
instance = comp, \BhexU[2]~output , BhexU[2]~output, Processor, 1
instance = comp, \BhexU[3]~output , BhexU[3]~output, Processor, 1
instance = comp, \BhexU[4]~output , BhexU[4]~output, Processor, 1
instance = comp, \BhexU[5]~output , BhexU[5]~output, Processor, 1
instance = comp, \BhexU[6]~output , BhexU[6]~output, Processor, 1
instance = comp, \clk~input , clk~input, Processor, 1
instance = comp, \clk~inputclkctrl , clk~inputclkctrl, Processor, 1
instance = comp, \execute~input , execute~input, Processor, 1
instance = comp, \button_sync[0]|q~0 , button_sync[0]|q~0, Processor, 1
instance = comp, \button_sync[0]|q , button_sync[0]|q, Processor, 1
instance = comp, \reset~input , reset~input, Processor, 1
instance = comp, \button_sync[2]|q~0 , button_sync[2]|q~0, Processor, 1
instance = comp, \button_sync[2]|q , button_sync[2]|q, Processor, 1
instance = comp, \controllogic|curr.eightS , controllogic|curr.eightS, Processor, 1
instance = comp, \controllogic|Selector1~0 , controllogic|Selector1~0, Processor, 1
instance = comp, \controllogic|curr.hold , controllogic|curr.hold, Processor, 1
instance = comp, \controllogic|Selector0~0 , controllogic|Selector0~0, Processor, 1
instance = comp, \controllogic|curr.execute , controllogic|curr.execute, Processor, 1
instance = comp, \controllogic|Selector2~0 , controllogic|Selector2~0, Processor, 1
instance = comp, \controllogic|curr.rerun , controllogic|curr.rerun, Processor, 1
instance = comp, \controllogic|curr.firstAdd~feeder , controllogic|curr.firstAdd~feeder, Processor, 1
instance = comp, \controllogic|curr.firstAdd , controllogic|curr.firstAdd, Processor, 1
instance = comp, \controllogic|curr.firstS , controllogic|curr.firstS, Processor, 1
instance = comp, \controllogic|curr.secondAdd~feeder , controllogic|curr.secondAdd~feeder, Processor, 1
instance = comp, \controllogic|curr.secondAdd , controllogic|curr.secondAdd, Processor, 1
instance = comp, \controllogic|curr.secondS , controllogic|curr.secondS, Processor, 1
instance = comp, \controllogic|curr.thirdAdd~feeder , controllogic|curr.thirdAdd~feeder, Processor, 1
instance = comp, \controllogic|curr.thirdAdd , controllogic|curr.thirdAdd, Processor, 1
instance = comp, \controllogic|curr.thirdS , controllogic|curr.thirdS, Processor, 1
instance = comp, \controllogic|curr.fourthAdd , controllogic|curr.fourthAdd, Processor, 1
instance = comp, \controllogic|curr.fourthS~feeder , controllogic|curr.fourthS~feeder, Processor, 1
instance = comp, \controllogic|curr.fourthS , controllogic|curr.fourthS, Processor, 1
instance = comp, \controllogic|curr.fifthAdd , controllogic|curr.fifthAdd, Processor, 1
instance = comp, \controllogic|curr.fifthS , controllogic|curr.fifthS, Processor, 1
instance = comp, \controllogic|curr.sixthAdd~feeder , controllogic|curr.sixthAdd~feeder, Processor, 1
instance = comp, \controllogic|curr.sixthAdd , controllogic|curr.sixthAdd, Processor, 1
instance = comp, \controllogic|curr.sixthS~feeder , controllogic|curr.sixthS~feeder, Processor, 1
instance = comp, \controllogic|curr.sixthS , controllogic|curr.sixthS, Processor, 1
instance = comp, \controllogic|curr.seventhAdd , controllogic|curr.seventhAdd, Processor, 1
instance = comp, \controllogic|curr.seventhS~feeder , controllogic|curr.seventhS~feeder, Processor, 1
instance = comp, \controllogic|curr.seventhS , controllogic|curr.seventhS, Processor, 1
instance = comp, \controllogic|curr.eightAdd , controllogic|curr.eightAdd, Processor, 1
instance = comp, \comb~1 , comb~1, Processor, 1
instance = comp, \comb~0 , comb~0, Processor, 1
instance = comp, \clear~input , clear~input, Processor, 1
instance = comp, \button_sync[1]|q~0 , button_sync[1]|q~0, Processor, 1
instance = comp, \button_sync[1]|q , button_sync[1]|q, Processor, 1
instance = comp, \switches[0]~input , switches[0]~input, Processor, 1
instance = comp, \switches[3]~input , switches[3]~input, Processor, 1
instance = comp, \switches[4]~input , switches[4]~input, Processor, 1
instance = comp, \comb~3 , comb~3, Processor, 1
instance = comp, \comb~4 , comb~4, Processor, 1
instance = comp, \controllogic|sub~0 , controllogic|sub~0, Processor, 1
instance = comp, \adder|fa0|cout~0 , adder|fa0|cout~0, Processor, 1
instance = comp, \switches[1]~input , switches[1]~input, Processor, 1
instance = comp, \adder|fa1|cout~0 , adder|fa1|cout~0, Processor, 1
instance = comp, \switches[2]~input , switches[2]~input, Processor, 1
instance = comp, \adder|fa2|cout~0 , adder|fa2|cout~0, Processor, 1
instance = comp, \adder|fa3|cout~0 , adder|fa3|cout~0, Processor, 1
instance = comp, \adder|fa4|s , adder|fa4|s, Processor, 1
instance = comp, \adder|fa4|cout~0 , adder|fa4|cout~0, Processor, 1
instance = comp, \switches[5]~input , switches[5]~input, Processor, 1
instance = comp, \adder|fa5|cout~0 , adder|fa5|cout~0, Processor, 1
instance = comp, \switches[6]~input , switches[6]~input, Processor, 1
instance = comp, \adder|fa6|cout~0 , adder|fa6|cout~0, Processor, 1
instance = comp, \switches[7]~input , switches[7]~input, Processor, 1
instance = comp, \adder|fa7|s~0 , adder|fa7|s~0, Processor, 1
instance = comp, \registerA|Data_Out~11 , registerA|Data_Out~11, Processor, 1
instance = comp, \registerA|Data_Out~10 , registerA|Data_Out~10, Processor, 1
instance = comp, \controllogic|WideOr19~1 , controllogic|WideOr19~1, Processor, 1
instance = comp, \controllogic|WideOr19~0 , controllogic|WideOr19~0, Processor, 1
instance = comp, \registerA|Data_Out[7]~3 , registerA|Data_Out[7]~3, Processor, 1
instance = comp, \registerA|Data_Out[7] , registerA|Data_Out[7], Processor, 1
instance = comp, \adder|fa6|s , adder|fa6|s, Processor, 1
instance = comp, \registerA|Data_Out~9 , registerA|Data_Out~9, Processor, 1
instance = comp, \registerA|Data_Out[6] , registerA|Data_Out[6], Processor, 1
instance = comp, \adder|fa5|s , adder|fa5|s, Processor, 1
instance = comp, \registerA|Data_Out~8 , registerA|Data_Out~8, Processor, 1
instance = comp, \registerA|Data_Out[5] , registerA|Data_Out[5], Processor, 1
instance = comp, \registerA|Data_Out~7 , registerA|Data_Out~7, Processor, 1
instance = comp, \registerA|Data_Out[4] , registerA|Data_Out[4], Processor, 1
instance = comp, \adder|fa3|s , adder|fa3|s, Processor, 1
instance = comp, \registerA|Data_Out~6 , registerA|Data_Out~6, Processor, 1
instance = comp, \registerA|Data_Out[3] , registerA|Data_Out[3], Processor, 1
instance = comp, \adder|fa2|s , adder|fa2|s, Processor, 1
instance = comp, \registerA|Data_Out~5 , registerA|Data_Out~5, Processor, 1
instance = comp, \registerA|Data_Out[2] , registerA|Data_Out[2], Processor, 1
instance = comp, \adder|fa1|s , adder|fa1|s, Processor, 1
instance = comp, \registerA|Data_Out~4 , registerA|Data_Out~4, Processor, 1
instance = comp, \registerA|Data_Out[1] , registerA|Data_Out[1], Processor, 1
instance = comp, \adder|fa0|s , adder|fa0|s, Processor, 1
instance = comp, \registerA|Data_Out~2 , registerA|Data_Out~2, Processor, 1
instance = comp, \registerA|Data_Out[0] , registerA|Data_Out[0], Processor, 1
instance = comp, \registerB|Data_Out~8 , registerB|Data_Out~8, Processor, 1
instance = comp, \registerB|Data_Out[7]~1 , registerB|Data_Out[7]~1, Processor, 1
instance = comp, \registerB|Data_Out[7] , registerB|Data_Out[7], Processor, 1
instance = comp, \registerB|Data_Out~7 , registerB|Data_Out~7, Processor, 1
instance = comp, \registerB|Data_Out[6] , registerB|Data_Out[6], Processor, 1
instance = comp, \registerB|Data_Out~6 , registerB|Data_Out~6, Processor, 1
instance = comp, \registerB|Data_Out[5] , registerB|Data_Out[5], Processor, 1
instance = comp, \registerB|Data_Out~5 , registerB|Data_Out~5, Processor, 1
instance = comp, \registerB|Data_Out[4] , registerB|Data_Out[4], Processor, 1
instance = comp, \registerB|Data_Out~4 , registerB|Data_Out~4, Processor, 1
instance = comp, \registerB|Data_Out[3] , registerB|Data_Out[3], Processor, 1
instance = comp, \registerB|Data_Out~3 , registerB|Data_Out~3, Processor, 1
instance = comp, \registerB|Data_Out[2] , registerB|Data_Out[2], Processor, 1
instance = comp, \registerB|Data_Out~2 , registerB|Data_Out~2, Processor, 1
instance = comp, \registerB|Data_Out[1] , registerB|Data_Out[1], Processor, 1
instance = comp, \registerB|Data_Out~0 , registerB|Data_Out~0, Processor, 1
instance = comp, \registerB|Data_Out[0] , registerB|Data_Out[0], Processor, 1
instance = comp, \comb~2 , comb~2, Processor, 1
instance = comp, \adder|fa7|cout~0 , adder|fa7|cout~0, Processor, 1
instance = comp, \xholder|out~0 , xholder|out~0, Processor, 1
instance = comp, \xholder|out , xholder|out, Processor, 1
instance = comp, \HexAL|WideOr6~0 , HexAL|WideOr6~0, Processor, 1
instance = comp, \HexAL|WideOr5~0 , HexAL|WideOr5~0, Processor, 1
instance = comp, \HexAL|WideOr4~0 , HexAL|WideOr4~0, Processor, 1
instance = comp, \HexAL|WideOr3~0 , HexAL|WideOr3~0, Processor, 1
instance = comp, \HexAL|WideOr2~0 , HexAL|WideOr2~0, Processor, 1
instance = comp, \HexAL|WideOr1~0 , HexAL|WideOr1~0, Processor, 1
instance = comp, \HexAL|WideOr0~0 , HexAL|WideOr0~0, Processor, 1
instance = comp, \HexAU|WideOr6~0 , HexAU|WideOr6~0, Processor, 1
instance = comp, \HexAU|WideOr5~0 , HexAU|WideOr5~0, Processor, 1
instance = comp, \HexAU|WideOr4~0 , HexAU|WideOr4~0, Processor, 1
instance = comp, \HexAU|WideOr3~0 , HexAU|WideOr3~0, Processor, 1
instance = comp, \HexAU|WideOr2~0 , HexAU|WideOr2~0, Processor, 1
instance = comp, \HexAU|WideOr1~0 , HexAU|WideOr1~0, Processor, 1
instance = comp, \HexAU|WideOr0~0 , HexAU|WideOr0~0, Processor, 1
instance = comp, \HexBL|WideOr6~0 , HexBL|WideOr6~0, Processor, 1
instance = comp, \HexBL|WideOr5~0 , HexBL|WideOr5~0, Processor, 1
instance = comp, \HexBL|WideOr4~0 , HexBL|WideOr4~0, Processor, 1
instance = comp, \HexBL|WideOr3~0 , HexBL|WideOr3~0, Processor, 1
instance = comp, \HexBL|WideOr2~0 , HexBL|WideOr2~0, Processor, 1
instance = comp, \HexBL|WideOr1~0 , HexBL|WideOr1~0, Processor, 1
instance = comp, \HexBL|WideOr0~0 , HexBL|WideOr0~0, Processor, 1
instance = comp, \HexBU|WideOr6~0 , HexBU|WideOr6~0, Processor, 1
instance = comp, \HexBU|WideOr5~0 , HexBU|WideOr5~0, Processor, 1
instance = comp, \HexBU|WideOr4~0 , HexBU|WideOr4~0, Processor, 1
instance = comp, \HexBU|WideOr3~0 , HexBU|WideOr3~0, Processor, 1
instance = comp, \HexBU|WideOr2~0 , HexBU|WideOr2~0, Processor, 1
instance = comp, \HexBU|WideOr1~0 , HexBU|WideOr1~0, Processor, 1
instance = comp, \HexBU|WideOr0~0 , HexBU|WideOr0~0, Processor, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
